### YamlMime:ManagedReference
items:
- uid: Vintagestory.API.Server.IPlayerDataManager
  commentId: T:Vintagestory.API.Server.IPlayerDataManager
  id: IPlayerDataManager
  parent: Vintagestory.API.Server
  children:
  - Vintagestory.API.Server.IPlayerDataManager.GetPlayerDataByLastKnownName(System.String)
  - Vintagestory.API.Server.IPlayerDataManager.GetPlayerDataByUid(System.String)
  - Vintagestory.API.Server.IPlayerDataManager.PlayerDataByUid
  - Vintagestory.API.Server.IPlayerDataManager.ResolvePlayerName(System.String,System.Action{Vintagestory.API.Server.EnumServerResponse,System.String})
  - Vintagestory.API.Server.IPlayerDataManager.ResolvePlayerUid(System.String,System.Action{Vintagestory.API.Server.EnumServerResponse,System.String})
  langs:
  - csharp
  - vb
  name: IPlayerDataManager
  nameWithType: IPlayerDataManager
  fullName: Vintagestory.API.Server.IPlayerDataManager
  type: Interface
  source:
    remote:
      path: VintagestoryApi/Server/API/IPlayerDataManager.cs
      branch: 406623c5a2f17e22ff6c77f3f15f3867fb8c62d4
      repo: https://gitlab-ci-token:64_WTjX-zAYLrR6LAXA56zk@git.striver.net/vintagecraft/game.git
    id: IPlayerDataManager
    path: Server/API/IPlayerDataManager.cs
    startLine: 14
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  syntax:
    content: public interface IPlayerDataManager
    content.vb: Public Interface IPlayerDataManager
- uid: Vintagestory.API.Server.IPlayerDataManager.PlayerDataByUid
  commentId: P:Vintagestory.API.Server.IPlayerDataManager.PlayerDataByUid
  id: PlayerDataByUid
  parent: Vintagestory.API.Server.IPlayerDataManager
  langs:
  - csharp
  - vb
  name: PlayerDataByUid
  nameWithType: IPlayerDataManager.PlayerDataByUid
  fullName: Vintagestory.API.Server.IPlayerDataManager.PlayerDataByUid
  type: Property
  source:
    remote:
      path: VintagestoryApi/Server/API/IPlayerDataManager.cs
      branch: 406623c5a2f17e22ff6c77f3f15f3867fb8c62d4
      repo: https://gitlab-ci-token:64_WTjX-zAYLrR6LAXA56zk@git.striver.net/vintagecraft/game.git
    id: PlayerDataByUid
    path: Server/API/IPlayerDataManager.cs
    startLine: 19
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Returns a copy of the player data dictionary loaded by the server. Thats the contents of Playerdata/playerdata.json
  example: []
  syntax:
    content: Dictionary<string, IServerPlayerData> PlayerDataByUid { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,Vintagestory.API.Server.IServerPlayerData}
    content.vb: ReadOnly Property PlayerDataByUid As Dictionary(Of String, IServerPlayerData)
  overload: Vintagestory.API.Server.IPlayerDataManager.PlayerDataByUid*
- uid: Vintagestory.API.Server.IPlayerDataManager.GetPlayerDataByUid(System.String)
  commentId: M:Vintagestory.API.Server.IPlayerDataManager.GetPlayerDataByUid(System.String)
  id: GetPlayerDataByUid(System.String)
  parent: Vintagestory.API.Server.IPlayerDataManager
  langs:
  - csharp
  - vb
  name: GetPlayerDataByUid(string)
  nameWithType: IPlayerDataManager.GetPlayerDataByUid(string)
  fullName: Vintagestory.API.Server.IPlayerDataManager.GetPlayerDataByUid(string)
  type: Method
  source:
    remote:
      path: VintagestoryApi/Server/API/IPlayerDataManager.cs
      branch: 406623c5a2f17e22ff6c77f3f15f3867fb8c62d4
      repo: https://gitlab-ci-token:64_WTjX-zAYLrR6LAXA56zk@git.striver.net/vintagecraft/game.git
    id: GetPlayerDataByUid
    path: Server/API/IPlayerDataManager.cs
    startLine: 26
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Retrieve a players offline, world-agnostic data by player uid
  example: []
  syntax:
    content: IServerPlayerData GetPlayerDataByUid(string playerUid)
    parameters:
    - id: playerUid
      type: System.String
      description: ''
    return:
      type: Vintagestory.API.Server.IServerPlayerData
      description: ''
    content.vb: Function GetPlayerDataByUid(playerUid As String) As IServerPlayerData
  overload: Vintagestory.API.Server.IPlayerDataManager.GetPlayerDataByUid*
  nameWithType.vb: IPlayerDataManager.GetPlayerDataByUid(String)
  fullName.vb: Vintagestory.API.Server.IPlayerDataManager.GetPlayerDataByUid(String)
  name.vb: GetPlayerDataByUid(String)
- uid: Vintagestory.API.Server.IPlayerDataManager.GetPlayerDataByLastKnownName(System.String)
  commentId: M:Vintagestory.API.Server.IPlayerDataManager.GetPlayerDataByLastKnownName(System.String)
  id: GetPlayerDataByLastKnownName(System.String)
  parent: Vintagestory.API.Server.IPlayerDataManager
  langs:
  - csharp
  - vb
  name: GetPlayerDataByLastKnownName(string)
  nameWithType: IPlayerDataManager.GetPlayerDataByLastKnownName(string)
  fullName: Vintagestory.API.Server.IPlayerDataManager.GetPlayerDataByLastKnownName(string)
  type: Method
  source:
    remote:
      path: VintagestoryApi/Server/API/IPlayerDataManager.cs
      branch: 406623c5a2f17e22ff6c77f3f15f3867fb8c62d4
      repo: https://gitlab-ci-token:64_WTjX-zAYLrR6LAXA56zk@git.striver.net/vintagecraft/game.git
    id: GetPlayerDataByLastKnownName
    path: Server/API/IPlayerDataManager.cs
    startLine: 32
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Retrieve a players offline, world-agnostic data by his last known name
  example: []
  syntax:
    content: IServerPlayerData GetPlayerDataByLastKnownName(string name)
    parameters:
    - id: name
      type: System.String
      description: ''
    return:
      type: Vintagestory.API.Server.IServerPlayerData
      description: ''
    content.vb: Function GetPlayerDataByLastKnownName(name As String) As IServerPlayerData
  overload: Vintagestory.API.Server.IPlayerDataManager.GetPlayerDataByLastKnownName*
  nameWithType.vb: IPlayerDataManager.GetPlayerDataByLastKnownName(String)
  fullName.vb: Vintagestory.API.Server.IPlayerDataManager.GetPlayerDataByLastKnownName(String)
  name.vb: GetPlayerDataByLastKnownName(String)
- uid: Vintagestory.API.Server.IPlayerDataManager.ResolvePlayerName(System.String,System.Action{Vintagestory.API.Server.EnumServerResponse,System.String})
  commentId: M:Vintagestory.API.Server.IPlayerDataManager.ResolvePlayerName(System.String,System.Action{Vintagestory.API.Server.EnumServerResponse,System.String})
  id: ResolvePlayerName(System.String,System.Action{Vintagestory.API.Server.EnumServerResponse,System.String})
  parent: Vintagestory.API.Server.IPlayerDataManager
  langs:
  - csharp
  - vb
  name: ResolvePlayerName(string, Action<EnumServerResponse, string>)
  nameWithType: IPlayerDataManager.ResolvePlayerName(string, Action<EnumServerResponse, string>)
  fullName: Vintagestory.API.Server.IPlayerDataManager.ResolvePlayerName(string, System.Action<Vintagestory.API.Server.EnumServerResponse, string>)
  type: Method
  source:
    remote:
      path: VintagestoryApi/Server/API/IPlayerDataManager.cs
      branch: 406623c5a2f17e22ff6c77f3f15f3867fb8c62d4
      repo: https://gitlab-ci-token:64_WTjX-zAYLrR6LAXA56zk@git.striver.net/vintagecraft/game.git
    id: ResolvePlayerName
    path: Server/API/IPlayerDataManager.cs
    startLine: 39
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Resolves a player name to a player uid, independent on whether this player is online, offline or never even joined the server. This is done by contacting the auth server, so please use this method sparingly.
  example: []
  syntax:
    content: void ResolvePlayerName(string playername, Action<EnumServerResponse, string> onPlayerReceived)
    parameters:
    - id: playername
      type: System.String
      description: ''
    - id: onPlayerReceived
      type: System.Action{Vintagestory.API.Server.EnumServerResponse,System.String}
      description: ''
    content.vb: Sub ResolvePlayerName(playername As String, onPlayerReceived As Action(Of EnumServerResponse, String))
  overload: Vintagestory.API.Server.IPlayerDataManager.ResolvePlayerName*
  nameWithType.vb: IPlayerDataManager.ResolvePlayerName(String, Action(Of EnumServerResponse, String))
  fullName.vb: Vintagestory.API.Server.IPlayerDataManager.ResolvePlayerName(String, System.Action(Of Vintagestory.API.Server.EnumServerResponse, String))
  name.vb: ResolvePlayerName(String, Action(Of EnumServerResponse, String))
- uid: Vintagestory.API.Server.IPlayerDataManager.ResolvePlayerUid(System.String,System.Action{Vintagestory.API.Server.EnumServerResponse,System.String})
  commentId: M:Vintagestory.API.Server.IPlayerDataManager.ResolvePlayerUid(System.String,System.Action{Vintagestory.API.Server.EnumServerResponse,System.String})
  id: ResolvePlayerUid(System.String,System.Action{Vintagestory.API.Server.EnumServerResponse,System.String})
  parent: Vintagestory.API.Server.IPlayerDataManager
  langs:
  - csharp
  - vb
  name: ResolvePlayerUid(string, Action<EnumServerResponse, string>)
  nameWithType: IPlayerDataManager.ResolvePlayerUid(string, Action<EnumServerResponse, string>)
  fullName: Vintagestory.API.Server.IPlayerDataManager.ResolvePlayerUid(string, System.Action<Vintagestory.API.Server.EnumServerResponse, string>)
  type: Method
  source:
    remote:
      path: VintagestoryApi/Server/API/IPlayerDataManager.cs
      branch: 406623c5a2f17e22ff6c77f3f15f3867fb8c62d4
      repo: https://gitlab-ci-token:64_WTjX-zAYLrR6LAXA56zk@git.striver.net/vintagecraft/game.git
    id: ResolvePlayerUid
    path: Server/API/IPlayerDataManager.cs
    startLine: 47
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Resolves a player uid to a player name, independent on whether this player is online, offline or never even joined the server. This is done by contacting the auth server, so please use this method sparingly.
  example: []
  syntax:
    content: void ResolvePlayerUid(string playeruid, Action<EnumServerResponse, string> onPlayerReceived)
    parameters:
    - id: playeruid
      type: System.String
      description: ''
    - id: onPlayerReceived
      type: System.Action{Vintagestory.API.Server.EnumServerResponse,System.String}
      description: ''
    content.vb: Sub ResolvePlayerUid(playeruid As String, onPlayerReceived As Action(Of EnumServerResponse, String))
  overload: Vintagestory.API.Server.IPlayerDataManager.ResolvePlayerUid*
  nameWithType.vb: IPlayerDataManager.ResolvePlayerUid(String, Action(Of EnumServerResponse, String))
  fullName.vb: Vintagestory.API.Server.IPlayerDataManager.ResolvePlayerUid(String, System.Action(Of Vintagestory.API.Server.EnumServerResponse, String))
  name.vb: ResolvePlayerUid(String, Action(Of EnumServerResponse, String))
references:
- uid: Vintagestory.API.Server
  commentId: N:Vintagestory.API.Server
  href: Vintagestory.html
  name: Vintagestory.API.Server
  nameWithType: Vintagestory.API.Server
  fullName: Vintagestory.API.Server
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Server
    name: Server
    href: Vintagestory.API.Server.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Server
    name: Server
    href: Vintagestory.API.Server.html
- uid: Vintagestory.API.Server.IPlayerDataManager.PlayerDataByUid*
  commentId: Overload:Vintagestory.API.Server.IPlayerDataManager.PlayerDataByUid
  href: Vintagestory.API.Server.IPlayerDataManager.html#Vintagestory_API_Server_IPlayerDataManager_PlayerDataByUid
  name: PlayerDataByUid
  nameWithType: IPlayerDataManager.PlayerDataByUid
  fullName: Vintagestory.API.Server.IPlayerDataManager.PlayerDataByUid
- uid: System.Collections.Generic.Dictionary{System.String,Vintagestory.API.Server.IServerPlayerData}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Vintagestory.API.Server.IServerPlayerData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, IServerPlayerData>
  nameWithType: Dictionary<string, IServerPlayerData>
  fullName: System.Collections.Generic.Dictionary<string, Vintagestory.API.Server.IServerPlayerData>
  nameWithType.vb: Dictionary(Of String, IServerPlayerData)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, Vintagestory.API.Server.IServerPlayerData)
  name.vb: Dictionary(Of String, IServerPlayerData)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Vintagestory.API.Server.IServerPlayerData
    name: IServerPlayerData
    href: Vintagestory.API.Server.IServerPlayerData.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Vintagestory.API.Server.IServerPlayerData
    name: IServerPlayerData
    href: Vintagestory.API.Server.IServerPlayerData.html
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Vintagestory.API.Server.IPlayerDataManager.GetPlayerDataByUid*
  commentId: Overload:Vintagestory.API.Server.IPlayerDataManager.GetPlayerDataByUid
  href: Vintagestory.API.Server.IPlayerDataManager.html#Vintagestory_API_Server_IPlayerDataManager_GetPlayerDataByUid_System_String_
  name: GetPlayerDataByUid
  nameWithType: IPlayerDataManager.GetPlayerDataByUid
  fullName: Vintagestory.API.Server.IPlayerDataManager.GetPlayerDataByUid
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Vintagestory.API.Server.IServerPlayerData
  commentId: T:Vintagestory.API.Server.IServerPlayerData
  parent: Vintagestory.API.Server
  href: Vintagestory.API.Server.IServerPlayerData.html
  name: IServerPlayerData
  nameWithType: IServerPlayerData
  fullName: Vintagestory.API.Server.IServerPlayerData
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Vintagestory.API.Server.IPlayerDataManager.GetPlayerDataByLastKnownName*
  commentId: Overload:Vintagestory.API.Server.IPlayerDataManager.GetPlayerDataByLastKnownName
  href: Vintagestory.API.Server.IPlayerDataManager.html#Vintagestory_API_Server_IPlayerDataManager_GetPlayerDataByLastKnownName_System_String_
  name: GetPlayerDataByLastKnownName
  nameWithType: IPlayerDataManager.GetPlayerDataByLastKnownName
  fullName: Vintagestory.API.Server.IPlayerDataManager.GetPlayerDataByLastKnownName
- uid: Vintagestory.API.Server.IPlayerDataManager.ResolvePlayerName*
  commentId: Overload:Vintagestory.API.Server.IPlayerDataManager.ResolvePlayerName
  href: Vintagestory.API.Server.IPlayerDataManager.html#Vintagestory_API_Server_IPlayerDataManager_ResolvePlayerName_System_String_System_Action_Vintagestory_API_Server_EnumServerResponse_System_String__
  name: ResolvePlayerName
  nameWithType: IPlayerDataManager.ResolvePlayerName
  fullName: Vintagestory.API.Server.IPlayerDataManager.ResolvePlayerName
- uid: System.Action{Vintagestory.API.Server.EnumServerResponse,System.String}
  commentId: T:System.Action{Vintagestory.API.Server.EnumServerResponse,System.String}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<EnumServerResponse, string>
  nameWithType: Action<EnumServerResponse, string>
  fullName: System.Action<Vintagestory.API.Server.EnumServerResponse, string>
  nameWithType.vb: Action(Of EnumServerResponse, String)
  fullName.vb: System.Action(Of Vintagestory.API.Server.EnumServerResponse, String)
  name.vb: Action(Of EnumServerResponse, String)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: Vintagestory.API.Server.EnumServerResponse
    name: EnumServerResponse
    href: Vintagestory.API.Server.EnumServerResponse.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: Vintagestory.API.Server.EnumServerResponse
    name: EnumServerResponse
    href: Vintagestory.API.Server.EnumServerResponse.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Vintagestory.API.Server.IPlayerDataManager.ResolvePlayerUid*
  commentId: Overload:Vintagestory.API.Server.IPlayerDataManager.ResolvePlayerUid
  href: Vintagestory.API.Server.IPlayerDataManager.html#Vintagestory_API_Server_IPlayerDataManager_ResolvePlayerUid_System_String_System_Action_Vintagestory_API_Server_EnumServerResponse_System_String__
  name: ResolvePlayerUid
  nameWithType: IPlayerDataManager.ResolvePlayerUid
  fullName: Vintagestory.API.Server.IPlayerDataManager.ResolvePlayerUid
